@startuml newuml
interface Strategy{
    + executeshoot(AbstractAircraft fly, int direction, int shootNum, int power):List<BaseBullet>
}

class DefaultShoot{
    + executeshoot(AbstractAircraft fly, int direction, int shootNum, int power):List<BaseBullet>
}

class ScatterShoot{
    + executeshoot(AbstractAircraft fly, int direction, int shootNum, int power):List<BaseBullet>
}

class CircleShoot{
    + executeshoot(AbstractAircraft fly, int direction, int shootNum, int power):List<BaseBullet>
}

Strategy <|.. DefaultShoot
Strategy <|.. ScatterShoot
Strategy <|.. CircleShoot

abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    # shoot_way:Strategy
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + setStrategy(Strategy ashootway)
    + {abstract} shoot():List<BaseBullet> 在子类的方法实现中调用shoot_way.executeshoot(参数省略)
}

AbstractAircraft o--> Strategy

@enduml